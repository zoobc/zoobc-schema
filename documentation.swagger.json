{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "service/accountBalance.proto",
    "version": "version not set"
  },
  "paths": {
    "/v1/account/GetAccount": {
      "get": {
        "tags": [
          "AccountService"
        ],
        "operationId": "GetAccount",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch Account by its ID.",
            "name": "ID",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch Account by its account address (note: this in case of zoobc account type is the public key).",
            "name": "Address",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelAccount"
            }
          }
        }
      }
    },
    "/v1/account/GetAccountBalance": {
      "get": {
        "tags": [
          "AccountBalanceService"
        ],
        "operationId": "GetAccountBalance",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch AccountBalance by type/address.",
            "name": "AccountType",
            "in": "query"
          },
          {
            "type": "string",
            "name": "AccountAddress",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch AccountBalance by its Block height.",
            "name": "BlockHeight",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelAccountBalance"
            }
          }
        }
      }
    },
    "/v1/account/GetAccountBalances": {
      "get": {
        "tags": [
          "AccountBalanceService"
        ],
        "operationId": "GetAccountBalances",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch AccountBalance by its balance (account balance \u003c  BalanceLowerThan).",
            "name": "BalanceLowerThan",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch AccountBalance by its balance (account balance \u003e  BalanceHigherThan).",
            "name": "BalanceHigherThan",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch AccountBalance by its spendablebalance (account spendablebalance \u003c  BalanceLowerThan).",
            "name": "SpendableBalanceLowerThan",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch AccountBalance by its spendablebalance (account spendablebalance \u003e  BalanceHigherThan).",
            "name": "SpendableBalanceHigherThan",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch AccountBalance by its spendablebalance (account spendablebalance \u003c  BalanceLowerThan).",
            "name": "PopRevenueBalanceLowerThan",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch AccountBalance by its popRevenuebalance (account popRevenuebalance \u003e  BalanceHigherThan).",
            "name": "PopRevenueBalanceHigherThan",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch AccountBalance by its Block height.",
            "name": "BlockHeight",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelGetAccountBalancesResponse"
            }
          }
        }
      }
    },
    "/v1/account/GetAccounts": {
      "get": {
        "tags": [
          "AccountService"
        ],
        "operationId": "GetAccounts",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch Accounts by its account type.",
            "name": "AccountType",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelGetAccountsResponse"
            }
          }
        }
      }
    },
    "/v1/block/GetBlock": {
      "get": {
        "tags": [
          "BlockService"
        ],
        "operationId": "GetBlock",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Number indicating chaintype.",
            "name": "ChainType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Block ID.",
            "name": "ID",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "number of block to fetch.",
            "name": "Height",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelBlock"
            }
          }
        }
      }
    },
    "/v1/block/GetBlocks": {
      "get": {
        "tags": [
          "BlockService"
        ],
        "operationId": "GetBlocks",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Number indicating chaintype.",
            "name": "ChainType",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Number of block to fetch.",
            "name": "Limit",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Fetch block from `n` height.",
            "name": "Height",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelGetBlocksResponse"
            }
          }
        }
      }
    },
    "/v1/mempool/GetMempoolTransaction": {
      "get": {
        "tags": [
          "MempoolService"
        ],
        "operationId": "GetMempoolTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "byte",
            "description": "Fetch Mempool Transaction by its TransactionBytes.",
            "name": "TransactionBytes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelMempoolTransaction"
            }
          }
        }
      }
    },
    "/v1/mempool/GetMempoolTransactions": {
      "get": {
        "tags": [
          "MempoolService"
        ],
        "operationId": "GetMempoolTransactions",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Fetch Mempool transactions from arrival timestamp.",
            "name": "From",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Fetch Mempool transactions to arrival timestamp.",
            "name": "To",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelGetMempoolTransactionsResponse"
            }
          }
        }
      }
    },
    "/v1/nodeRegistration/GetNodeRegistration": {
      "get": {
        "tags": [
          "NodeRegistrationService"
        ],
        "operationId": "GetNodeRegistration",
        "parameters": [
          {
            "type": "string",
            "format": "byte",
            "name": "NodePublicKey",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "AccountType",
            "in": "query"
          },
          {
            "type": "string",
            "name": "AccountAddress",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "RegistrationHeight",
            "in": "query"
          },
          {
            "type": "string",
            "name": "NodeAddress",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelNodeRegistration"
            }
          }
        }
      }
    },
    "/v1/nodeRegistration/GetNodeRegistrations": {
      "get": {
        "tags": [
          "NodeRegistrationService"
        ],
        "operationId": "GetNodeRegistrations",
        "parameters": [
          {
            "type": "string",
            "format": "byte",
            "name": "NodePublicKey",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "AccountType",
            "in": "query"
          },
          {
            "type": "string",
            "name": "AccountAddress",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "RegistrationHeight",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelGetNodeRegistrationsResponse"
            }
          }
        }
      }
    },
    "/v1/transaction/GetTransaction": {
      "get": {
        "tags": [
          "TransactionService"
        ],
        "operationId": "GetTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Fetch Transaction by its ID.",
            "name": "ID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelTransaction"
            }
          }
        }
      }
    },
    "/v1/transaction/GetTransactions": {
      "get": {
        "tags": [
          "TransactionService"
        ],
        "operationId": "GetTransactions",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Transactions set limit to be fetched.",
            "name": "Limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uint64",
            "description": "Transactions set offset to be fetched.",
            "name": "Offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelGetTransactionsResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "modelAccount": {
      "type": "object",
      "title": "Account represent the transaction data structure stored in the database",
      "properties": {
        "AccountType": {
          "type": "integer",
          "format": "int64"
        },
        "Address": {
          "type": "string"
        },
        "ID": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "modelAccountBalance": {
      "type": "object",
      "title": "AccountBalance represent the transaction data structure stored in the database",
      "properties": {
        "AccountID": {
          "type": "string",
          "format": "byte"
        },
        "Balance": {
          "type": "string",
          "format": "int64"
        },
        "BlockHeight": {
          "type": "integer",
          "format": "int64"
        },
        "Latest": {
          "type": "boolean",
          "format": "boolean"
        },
        "PopRevenue": {
          "type": "string",
          "format": "int64"
        },
        "SpendableBalance": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modelBlock": {
      "type": "object",
      "title": "Block represent the block data structure stored in the database",
      "properties": {
        "BlockSeed": {
          "type": "string",
          "format": "byte"
        },
        "BlockSignature": {
          "type": "string",
          "format": "byte"
        },
        "BlocksmithID": {
          "type": "string",
          "format": "byte"
        },
        "CumulativeDifficulty": {
          "type": "string"
        },
        "Height": {
          "type": "integer",
          "format": "int64"
        },
        "ID": {
          "type": "string",
          "format": "int64"
        },
        "PayloadHash": {
          "type": "string",
          "format": "byte"
        },
        "PayloadLength": {
          "type": "integer",
          "format": "int64"
        },
        "PreviousBlockHash": {
          "type": "string",
          "format": "byte"
        },
        "SmithScale": {
          "type": "string",
          "format": "int64"
        },
        "Timestamp": {
          "type": "string",
          "format": "int64"
        },
        "TotalAmount": {
          "type": "string",
          "format": "int64"
        },
        "TotalCoinBase": {
          "type": "string",
          "format": "int64"
        },
        "TotalFee": {
          "type": "string",
          "format": "int64"
        },
        "Transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelTransaction"
          }
        },
        "Version": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "modelEmptyTransactionBody": {
      "type": "object"
    },
    "modelGetAccountBalancesResponse": {
      "type": "object",
      "properties": {
        "AccountBalance": {
          "type": "array",
          "title": "AccountBalances returned",
          "items": {
            "$ref": "#/definitions/modelAccountBalance"
          }
        },
        "AccountBalanceSize": {
          "type": "integer",
          "format": "int64",
          "title": "Number of accounts returned"
        }
      }
    },
    "modelGetAccountsResponse": {
      "type": "object",
      "properties": {
        "Account": {
          "type": "array",
          "title": "Accounts returned",
          "items": {
            "$ref": "#/definitions/modelAccount"
          }
        },
        "AccountSize": {
          "type": "integer",
          "format": "int64",
          "title": "Number of accounts returned"
        }
      }
    },
    "modelGetBlocksResponse": {
      "type": "object",
      "properties": {
        "ChainType": {
          "type": "integer",
          "format": "int32",
          "title": "Number indicating chaintype"
        },
        "Count": {
          "type": "integer",
          "format": "int64",
          "title": "Number of block returned"
        },
        "Height": {
          "type": "integer",
          "format": "int64",
          "title": "Blocks height returned from"
        },
        "blocks": {
          "type": "array",
          "title": "Blocks returned",
          "items": {
            "$ref": "#/definitions/modelBlock"
          }
        }
      }
    },
    "modelGetMempoolTransactionsResponse": {
      "type": "object",
      "properties": {
        "MempoolSize": {
          "type": "integer",
          "format": "int64",
          "title": "Number of transactions returned"
        },
        "MempoolTransactions": {
          "type": "array",
          "title": "Mempool transactions returned",
          "items": {
            "$ref": "#/definitions/modelMempoolTransaction"
          }
        }
      }
    },
    "modelGetNodeRegistrationsResponse": {
      "type": "object",
      "properties": {
        "AccountAddress": {
          "type": "string"
        },
        "AccountType": {
          "type": "integer",
          "format": "int64"
        },
        "LockedBalance": {
          "type": "string",
          "format": "int64"
        },
        "NodeAddress": {
          "type": "string"
        },
        "NodePublicKey": {
          "type": "string",
          "format": "byte"
        },
        "RegistrationHeight": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modelGetTransactionsResponse": {
      "type": "object",
      "properties": {
        "Count": {
          "type": "integer",
          "format": "int64",
          "title": "Number of transactions returned"
        },
        "Total": {
          "type": "string",
          "format": "uint64",
          "title": "Number of transactions in total"
        },
        "Transactions": {
          "type": "array",
          "title": "Transaction transactions returned",
          "items": {
            "$ref": "#/definitions/modelTransaction"
          }
        }
      }
    },
    "modelMempoolTransaction": {
      "type": "object",
      "title": "Mempool represent the mempool data structure stored in the database",
      "properties": {
        "ArrivalTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "FeePerByte": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "string",
          "format": "int64"
        },
        "TransactionBytes": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "modelNodeRegistration": {
      "type": "object",
      "properties": {
        "AccountId": {
          "type": "string",
          "format": "byte"
        },
        "Height": {
          "type": "integer",
          "format": "int64"
        },
        "Latest": {
          "type": "boolean",
          "format": "boolean"
        },
        "LockedBalance": {
          "type": "string",
          "format": "int64"
        },
        "NodeAddress": {
          "type": "string"
        },
        "NodePublicKey": {
          "type": "string",
          "format": "byte"
        },
        "Queued": {
          "type": "boolean",
          "format": "boolean"
        },
        "RegistrationHeight": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modelNodeRegistrationTransactionBody": {
      "type": "object",
      "properties": {
        "AccountAddress": {
          "type": "string"
        },
        "AccountType": {
          "type": "integer",
          "format": "int64"
        },
        "LockedBalance": {
          "type": "string",
          "format": "int64"
        },
        "NodeAddress": {
          "type": "string"
        },
        "NodePublicKey": {
          "type": "string",
          "format": "byte"
        },
        "Poown": {
          "$ref": "#/definitions/modelProofOfOwnership"
        },
        "RegistrationHeight": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modelProofOfOwnership": {
      "type": "object",
      "title": "TODO: shall we move this to a different file?",
      "properties": {
        "AccountAddress": {
          "type": "string"
        },
        "AccountType": {
          "type": "integer",
          "format": "int64"
        },
        "blockHash": {
          "type": "string",
          "format": "byte"
        },
        "blockHeight": {
          "type": "integer",
          "format": "int64"
        },
        "signature": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "modelSendMoneyTransactionBody": {
      "type": "object",
      "properties": {
        "Amount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modelTransaction": {
      "type": "object",
      "title": "Transaction represent the transaction data structure stored in the database",
      "properties": {
        "BlockID": {
          "type": "string",
          "format": "int64"
        },
        "Fee": {
          "type": "string",
          "format": "int64"
        },
        "Height": {
          "type": "integer",
          "format": "int64"
        },
        "ID": {
          "type": "string",
          "format": "int64"
        },
        "RecipientAccountAddress": {
          "type": "string"
        },
        "RecipientAccountType": {
          "type": "integer",
          "format": "int64"
        },
        "SenderAccountAddress": {
          "type": "string"
        },
        "SenderAccountType": {
          "type": "integer",
          "format": "int64"
        },
        "Signature": {
          "type": "string",
          "format": "byte"
        },
        "Timestamp": {
          "type": "string",
          "format": "int64"
        },
        "TransactionBodyBytes": {
          "type": "string",
          "format": "byte"
        },
        "TransactionBodyLength": {
          "type": "integer",
          "format": "int64"
        },
        "TransactionHash": {
          "type": "string",
          "format": "byte"
        },
        "TransactionType": {
          "type": "integer",
          "format": "int64"
        },
        "Version": {
          "type": "integer",
          "format": "int64"
        },
        "emptyTransactionBody": {
          "$ref": "#/definitions/modelEmptyTransactionBody"
        },
        "nodeRegistrationTransactionBody": {
          "$ref": "#/definitions/modelNodeRegistrationTransactionBody"
        },
        "sendMoneyTransactionBody": {
          "$ref": "#/definitions/modelSendMoneyTransactionBody"
        }
      }
    }
  }
}
