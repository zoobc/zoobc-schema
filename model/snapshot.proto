/* ZooBC zoobc-schema
*
* Copyright Â© 2020 Quasisoft Limited - Hong Kong
*
* ZooBC is architected by Roberto Capodieci & Barton Johnston
*             contact us at roberto.capodieci[at]blockchainzoo.com
*             and barton.johnston[at]blockchainzoo.com
*
* Permission is hereby granted, free of charge, to any person obtaining a
* copy of this software and associated documentation files (the "Software"),
* to deal in the Software without restriction, including without limitation
* the rights to use, copy, modify, merge, publish, distribute, sublicense,
* and/or sell copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE. */
syntax = "proto3";

package model;
option go_package = "github.com/zoobc/zoobc-core/common/model";

import "model/spineBlockManifest.proto";
import "model/accountBalance.proto";
import "model/nodeRegistration.proto";
import "model/accountDataset.proto";
import "model/participationScore.proto";
import "model/publishedReceipt.proto";
import "model/escrow.proto";
import "model/multiSignature.proto";
import "model/block.proto";
import "model/skippedBlocksmith.proto";
import "model/feeScale.proto";
import "model/feeVote.proto";
import "model/liquidPayment.proto";
import "model/atomic.proto";

// SnapshotFileInfo model to pass data between snapshot and spineBlockManifest interfaces
message SnapshotFileInfo {
    bytes SnapshotFileHash = 1;
    uint32 Height = 2;
    int64 ProcessExpirationTimestamp = 3;
    int32 ChainType = 4;
    SpineBlockManifestType SpineBlockManifestType = 5;
    repeated bytes FileChunksHashes = 6;
}

// SnapshotPayload snapshot data
message SnapshotPayload {
    repeated Block Blocks = 1;
    repeated AccountBalance AccountBalances = 2;
    repeated NodeRegistration NodeRegistrations = 3;
    repeated AccountDataset AccountDatasets = 4;
    repeated ParticipationScore ParticipationScores = 5;
    repeated PublishedReceipt PublishedReceipts = 6;
    repeated Escrow EscrowTransactions = 7;
    repeated PendingTransaction PendingTransactions = 8;
    repeated PendingSignature PendingSignatures = 9;
    repeated MultiSignatureInfo MultiSignatureInfos = 10;
    repeated SkippedBlocksmith SkippedBlocksmiths = 11;
    repeated FeeScale FeeScale = 12;
    repeated FeeVoteCommitmentVote FeeVoteCommitmentVote = 13;
    repeated FeeVoteRevealVote FeeVoteRevealVote = 14;
    repeated LiquidPayment LiquidPayment = 15;
    repeated NodeAdmissionTimestamp NodeAdmissionTimestamp = 16;
    repeated MultiSignatureParticipant MultiSignatureParticipants = 17;
    repeated Atomic AtomicTransaction = 18;
}

