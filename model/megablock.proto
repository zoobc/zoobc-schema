syntax = "proto3";

package model;
option go_package = "github.com/zoobc/zoobc-core/common/model";

import "model/fileChunk.proto";

// Megablock represent the megablock data structure stored in the database
message Megablock {
  int64 ID = 1 [ jstype = JS_STRING ];
  // FullFileHash hash of the full - completed (snapshot) file
  bytes FullFileHash = 2;
  // MegablockPayloadLength payload length of the megablock: len(snapshot chunk bytes)
  uint32 MegablockPayloadLength = 3;
  // MegablockPayloadHash hash of megablock payload: sha512(snapshot chunk bytes)
  bytes MegablockPayloadHash = 4;
  // SpineBlockHeight spine block height that wil reference this megablock (in its payload)
  uint32 SpineBlockHeight = 5;
  // MegablockHeight height (on the mainchain) at which the (snapshot) file started been computed
  // Note: this is not the last mainchain height contained in the snapshot file (that one should be = MegablockHeight - MinRollbackBlocks)
  uint32 MegablockHeight = 6;
  // Number indicating chaintype (at the moment it can only be mainchain, but in future could be others)
  int32 ChainType = 7;
  // MegablockType type of megablock
  MegablockType MegablockType = 8;
  // FileChunk (when loaded), all snapshot chunks in this megablock
  repeated FileChunk FileChunks = 9;
}

// MegablockType type of megablock (as of now only snapshot)
enum MegablockType {
    Snapshot = 0;
    //TODO: example of other mb type
//    BlockBackup = 1;
}