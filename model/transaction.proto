syntax="proto3";

package model;

option go_package = "github.com/zoobc/zoobc-core/common/model";

// Transaction represent the transaction data structure stored in the database
message Transaction {
    bytes ID = 1;
    int64 BlockID = 2;    
    uint32 BlockHeight = 3;    
    string SenderAccountID = 4;
    string RecipientAccountID = 5;
    uint32 TransactionType = 6;
    int64 Fee = 7;
    bytes TransactionHash = 8;
    uint32 TransactionBodyLength = 9;
    bytes TransactionBodyBytes = 10;
    bytes Signature = 11;
    //TODO: protobuf only (not reflected in db)
    // TransactionBody
}

message GetTransactionRequest {
    // Fetch Transaction by its ID
    uint32 ID = 1;
    // Fetch Transaction by its signature
    uint32 Signature = 4;
    // Fetch Transaction by its hash
    uint32 TransactionHash = 5;
}

message GetTransactionsRequest {
    // Fetch Transaction at block Height 
    int64 BlockHeight = 1;
    // Fetch Transactions lower than block height
    int64 FromHeight = 2;
    // Fetch Transactions higher than block height
    int64 ToHeight = 3;
    // Fetch Transactions by sender
    string SenderAccountID = 4;
    // Fetch Transactions by recipient
    string RecipientAccountID = 5;
    // Fetch Transactions by transaction type
    uint32 TransactionType = 6;
    // Fetch Transactions lower than a given block timestamp (note: relative query will lookup the block table to get timestaps)
    int64 FromTimestamp = 7;
    // Fetch Transactions higher than a given block timestamp (note: relative query will lookup the block table to get timestaps)
    int64 ToTimestamp = 8;

}

message GetTransactionsResponse {
    // Number of transactions returned
    uint32 TransactionSize = 1;
    // Transaction transactions returned
    repeated Transaction Transactions = 2;
}

message PostUnconfirmedTransactionRequest {
	Transaction      Transaction = 1;
	uint32 ArrivalTimestamp = 2;
	int64 FeePerByte = 3;
}