syntax="proto3";

package service;

option go_package = "github.com/zoobc/zoobc-core/common/service";

import "model/multiSignature.proto";
import "google/api/annotations.proto";

// MultisigService represent request on Blockchain's multisig component such as pending_transaction, pending_signatures, and multisig_info 
service MultisigService {
    rpc GetPendingTransactions(model.GetPendingTransactionsRequest) returns (model.GetPendingTransactionsResponse) {
        option (google.api.http) = {
            get: "/v1/multisig/GetPendingTransactions"
        };
    }

    rpc GetPendingTransactionDetailByTransactionHash(model.GetPendingTransactionDetailByTransactionHashRequest) returns (model.GetPendingTransactionDetailByTransactionHashResponse) {
        option (google.api.http) = {
            get: "/v1/multisig/GetPendingTransactionDetailByTransactionHash"
        };
    }

    rpc GetMultisignatureInfo(model.GetMultisignatureInfoRequest) returns (model.GetMultisignatureInfoResponse) {
        option (google.api.http) = {
            get: "/v1/multisig/GetMultisignatureInfo"
        };
    }
    
    rpc GetMultisigAddressByParticipantAddress(model.GetMultisigAddressByParticipantAddressRequest) returns (model.GetMultisigAddressByParticipantAddressResponse) {
        option (google.api.http) = {
            get: "/v1/multisig/GetMultisigAddressByParticipantAddress"
        };
    }

    // GetPendingTransactionsByHeight fetch list of pending transactions (latest = 1 and latest = 0) within `fromHeight` and `toHeight`
    rpc GetPendingTransactionsByHeight(model.GetPendingTransactionsByHeightRequest) returns (model.GetPendingTransactionsByHeightResponse) {
        option (google.api.http) = {
            get: "/v1/multisig/GetPendingTransactionsByHeight"
        };
    }

    rpc GetMultisigAddressesByBlockHeightRange(model.GetMultisigAddressesByBlockHeightRangeRequest) returns (model.GetMultisigAddressesByBlockHeightRangeResponse) {
        option (google.api.http) = {
            get: "/v1/multisig/GetMultisigAddressesByBlockHeightRange"
        };
    }

    rpc GetParticipantsByMultisigAddresses(model.GetParticipantsByMultisigAddressesRequest) returns (model.GetParticipantsByMultisigAddressesResponse) {
        option (google.api.http) = {
            get: "/v1/multisig/GetParticipantsByMultisigAddresses"
        };
    }
}
